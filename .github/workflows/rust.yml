name: Rust

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

env:
  CARGO_TERM_COLOR: always

# Linters inspired from here: https://github.com/actions-rs/meta/blob/master/recipes/quickstart.md
jobs:
  fmt:
    name: Rustfmt
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
  Mac:
    name: Mac Tests
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

  Linux: 
    name: Linux Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install libpcap
      run: sudo apt-get install libpcap-dev
    - name: Install dependency for alsa-sys
      run: sudo apt-get install libasound2-dev
    - name: Build 
      run: cargo build --verbose
    - name: Run tests 
      run: cargo test --verbose

#  Windows: 
#    name: Windows Tests
#    runs-on: windows-latest
#    steps:
#    - uses: actions/checkout@v3
#    - name: Update cargo config to use Git CLI (windows)
#      run: Set-Content -Path $env:USERPROFILE\.cargo\config.toml "[net]`ngit-fetch-with-cli = true"
#    - name: Install winpcap
#      run: |
#            cinst -y winpcap --version 4.1.3.20161116
#            (New-Object System.Net.WebClient).DownloadFile("https://www.winpcap.org/install/bin/WpdPack_4_1_2.zip", "C:/WpdPack.zip")
#            Expand-Archive -LiteralPath C:/WpdPack.zip -DestinationPath C:/
#            echo "LIB=C:/WpdPack/Lib/x64" >> $env:GITHUB_ENV
#    - name: Build 
#      run: cargo build --verbose
#    - name: Run tests 
#      run: cargo test --verbose
